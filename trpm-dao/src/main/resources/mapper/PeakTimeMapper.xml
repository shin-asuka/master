<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PeakTimeMapper">

	<sql id="peakTimeColumns">peak_time.id AS peak_time_id, peak_time.time_point AS
		peak_time_time_point, peak_time.type AS peak_time_type
	</sql>

	<sql id="peakTimeWhere">
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="id!=0">AND peak_time.id = #{id}</if>
			<if test="timePoint!=null">AND peak_time.time_point = #{timePoint}</if>
			<if test="type!=null">AND peak_time.type = #{type}</if>
		</trim>
	</sql>

	<sql id="peakTimeOrder">
		<if test="orderString!=null">ORDER BY ${orderString}</if>
	</sql>

	<sql id="peakTimeLimit">LIMIT #{startLine},#{limitLine}</sql>

	<resultMap type="com.vipkid.trpm.entity.PeakTime" id="peakTimeResultMap">
		<id column="peak_time_id" property="id" />
		<result column="peak_time_time_point" property="timePoint" />
		<result column="peak_time_type" property="type" />
	</resultMap>

	<select id="findDao" resultMap="peakTimeResultMap">
		SELECT
		<include refid="peakTimeColumns" />
		FROM peak_time
		<include refid="peakTimeWhere" />
		<include refid="peakTimeOrder" />
	</select>

	<select id="countDao" resultType="int">
		SELECT COUNT(*) FROM peak_time
		<include refid="peakTimeWhere" />
	</select>

	<select id="pageDao" resultMap="peakTimeResultMap">
		SELECT
		<include refid="peakTimeColumns" />
		FROM peak_time
		<include refid="peakTimeWhere" />
		<include refid="peakTimeOrder" />
		<include refid="peakTimeLimit" />
	</select>

	<select id="limitDao" resultMap="peakTimeResultMap">
		SELECT
		<include refid="peakTimeColumns" />
		FROM peak_time
		<include refid="peakTimeWhere" />
		<include refid="peakTimeOrder" />
		<include refid="peakTimeLimit" />
	</select>

	<insert id="saveDao" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO peak_time
		<trim prefix="(" prefixOverrides=",">
			<if test="id!=0">,id</if>
			<if test="timePoint!=null">,time_point</if>
			<if test="type!=null">,type</if>
		</trim>
		) VALUES
		<trim prefix="(" prefixOverrides=",">
			<if test="id!=0">,#{id}</if>
			<if test="timePoint!=null">,#{timePoint}</if>
			<if test="type!=null">,#{type}</if>
		</trim>
		)
	</insert>

	<update id="updateDao">
		UPDATE peak_time
		<trim prefix="SET" prefixOverrides=",">
			<if test="id!=0">,id = #{id}</if>
			<if test="timePoint!=null">,time_point = #{timePoint}</if>
			<if test="type!=null">,type = #{type}</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND">AND id = #{id}</trim>
	</update>

	<delete id="deleteDao">
		DELETE FROM peak_time
		<trim prefix="WHERE" prefixOverrides="AND">AND id = #{id}</trim>
	</delete>

	<!-- 通过开始时间和结束时间查询 -->
	<select id="findByFromAndToTime" resultMap="peakTimeResultMap">
		SELECT
		<include refid="peakTimeColumns" />
		FROM peak_time
		WHERE
        <![CDATA[
            peak_time.time_point > #{fromTime} AND peak_time.time_point < #{toTime}
        ]]>
		<include refid="peakTimeOrder" />
	</select>

	<!-- 通过时间查询 -->
	<select id="findByTimePoint" resultMap="peakTimeResultMap">
		SELECT
		<include refid="peakTimeColumns" />
		FROM peak_time
		WHERE
		peak_time.time_point = #{timePoint}
	</select>

	<!-- 通过老师ID，开始时间和结束时间查询数量，不查询PRACTICUM的课程 -->
	<select id="countDaoByTeacherIdAndFromWithToTime" resultType="int">
		SELECT COUNT(*)
		FROM online_class
		LEFT JOIN peak_time ON online_class.scheduled_date_time = peak_time.time_point
		WHERE
		online_class.teacher_id = #{teacherId}
		AND online_class.class_type = 0
		AND peak_time.time_point BETWEEN #{fromTime} AND #{toTime}
		AND peak_time.type = "PEAKTIME"
		AND online_class.status != "REMOVED"
	</select>

</mapper>
