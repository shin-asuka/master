<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<import resource="datasource-${datasource}.xml" />

    <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource" />
        <beans:property name="configLocation" value="classpath:spring/mybatis-config.xml" />
        <beans:property name="mapperLocations">
        	<beans:array>
        		<beans:value>classpath*:mapper/*/*.xml</beans:value>
        	</beans:array>
        </beans:property>
    </beans:bean>

    <beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg index="0" ref="sqlSessionFactory" />
        <beans:constructor-arg index="1" value="REUSE" />
    </beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<aop:aspectj-autoproxy />

	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.vipkid.trpm.service.**.*Service.*(..))" order="2" />
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.vipkid.recruitment.**.service.*Service.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.vipkid.portal.**.service.*Service.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.vipkid.rest.service.*Service.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.vipkid.payroll.service.*Service.*(..))"/>
		<aop:advisor advice-ref="rwDataSourceInterceptor" pointcut="execution(* com.vipkid.rest.portal.controller.*Controller.*(..))" order="1" />
		<aop:advisor advice-ref="rwDataSourceInterceptor" pointcut="execution(* com.vipkid.portal.personal.controller.*Controller.*(..))" order="1" />
	</aop:config>

	<bean id="rwDataSourceInterceptor" class="com.vipkid.dataSource.TypedReadWriteDataSourceInterceptor"></bean>

</beans>